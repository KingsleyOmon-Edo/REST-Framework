<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="EnvDTE" #>
<#@ import namespace="EnvDTE" #>
<#@ include file="T4Toolbox.tt" #>
<#@ include file="VisualStudioHelper.ttinclude" #>

<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>

//<#=VisualStudioHelper.SolutionFile#>
<#

	this.ModelHelperInstance = new ModelHelper();
#>

<#+
	
	public ModelHelper ModelHelperInstance {get; set;}
	public class ModelHelper
	{
			public string EntityAttributeFullName = "A.Core.Attributes.EntityAttribute";

			public IEnumerable<EnvDTE.CodeClass> GetEntityList()
			{
				var project = VisualStudioHelper.CurrentProject;
				var allClasses = VisualStudioHelper.CodeModel.GetAllCodeElementsOfType(project.CodeModel.CodeElements, EnvDTE.vsCMElement.vsCMElementClass, false);
				IList<EnvDTE.CodeClass> entityList = new List<EnvDTE.CodeClass>();
				foreach(EnvDTE.CodeClass entity in allClasses)
				{
					var allAttributes = VisualStudioHelper.CodeModel.GetAllCodeElementsOfType(entity.Attributes, vsCMElement.vsCMElementAttribute, false);
					 if (allAttributes.OfType<EnvDTE.CodeAttribute>()
								 .Any(att => att.FullName == EntityAttributeFullName))
					{
						entityList.Add(entity);
					}
				}
				return entityList;
			}
	}
#>
